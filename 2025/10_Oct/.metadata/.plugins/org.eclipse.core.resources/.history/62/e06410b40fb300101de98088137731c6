package BOJ_NM10_15664;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.Arrays;
import java.util.Scanner;

// 중복 없는 조합 - DFS
public class Main {
	static int[] list;
	static int[] result;
	static int R;
	static int N;
	static StringBuilder sb = new StringBuilder();
	public static void main(String[] args) throws FileNotFoundException {
		File file = new File("./src/BOJ_NM10_15664/input.txt");
		Scanner sc = new Scanner(file);
//		Scanner sc = new Scanner(System.in);
		
		// #### 입력 데이터 ####
		N = sc.nextInt(); // 원본 데이터 원소 총 개수
		R = sc.nextInt(); // 추출할 원소 개수
		list = new int[N];
		for (int i = 0; i < N; i++) {
			list[i] = sc.nextInt();
		} // 원본 리스트 채우기
		
		// #### 원본 리스트 오름차순 ####
		Arrays.sort(list);
		result = new int[R];
		
		// #### combination 함수 실행 ####
		combination(0, 0);
		
		// #### 결과 출력 ####
		System.out.println(sb.toString());
	} // main
	
	// 중복없는 조합 - DFS
	public static void combination(int start, int idx) {
		// 1. 탈출 조건
		if (idx == R) {
			// 1-1. 결과 문자열로 만들기
			for (int r : result) {
				sb.append(r).append(" ");
			}
			sb.append("\n");
			return;
		}
		// 2. start 지점부터 원소 살펴보기
		for (int i = start; i < N; i++) {
			// 2-1. 원소 저장
			result[idx] = list[i];
			// 2-2. 다음 원소 탐색 (재귀)
			combination(i + 1, idx + 1);
		}
	}

}
