package BOJ_NM11_15665;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.Arrays;
import java.util.Scanner;

// 중복이 있는 순열
public class Main {
	static int[] list; // 원본 리스트
	static int[] result; // 결과 리스트
	static int R; // 뽑아낼 원소 수
	static int N; // 전체 원소 수
	static StringBuilder sb = new StringBuilder();
	public static void main(String[] args) throws FileNotFoundException {
		File file = new File("./src/BOJ_NM11_15665/input.txt");
		Scanner sc = new Scanner(file);
//		Scanner sc = new Scanner(System.in);
		
		// #### 입력 데이터 ####
		N = sc.nextInt(); // 전체 원소 수
		R = sc.nextInt(); // 뽑아낼 원소 수
		list = new int[N];
		for (int i = 0; i < N; i++) {
			list[i] = sc.nextInt();
		} // 원본 리스트 채우기
		
		// #### 원본 리스트 정렬 ####
		Arrays.sort(list);
		result = new int[R];
		
		// #### repeatPermutation 함수 실행 ####
		System.out.println(sb.toString());
	} // main
	
	// 중복이 있는 순열
	public static void repeatPermutation(int idx) {
		// 1. 탈출 조건
		if (idx == R) {
			// 1-1. 문자열에 추가
			for (int r : result) {
				sb.append(r).append(" ");
			}
			sb.append("\n");
		}
		
		int prev = -1;
		
		// 2. 모든 원소 탐색
		for (int i = 0; i < N; i++) {
			if (prev == list[i]) {
				continue;
			}
			// 2-1. 원소 등록
			result[idx] = list[i];
			// 2-2. 다음 원소 탐색
			repeatPermutation(idx + 1);
			prev = list[i];
		}
	}

}
